* Preparation

Read all the documentation provided by the author of the lab.

Install =flex= and =bison= on your computer. They are required to build
the various tools used by the lab.

Edit =misc/Makefile= and =pipe/Makefile=. Make sure that the compiler
flags include =-fcommon=.

#+begin_src diff
  modified   arch/archlab-handout/sim/misc/Makefile
  @@ -1,6 +1,6 @@
   CC=gcc
  -CFLAGS=-Wall -O1 -g
  -LCFLAGS=-O1
  +CFLAGS=-Wall -O1 -g -fcommon
  +LCFLAGS=-O1 -fcommon
   LEX = flex
   YACC=bison
   LEXLIB = -lfl
  modified   arch/archlab-handout/sim/pipe/Makefile
  @@ -23,7 +23,7 @@ TKINC=-isystem /usr/include/tcl8.5
   # flags.

   CC=gcc
  -CFLAGS=-Wall -O2
  +CFLAGS=-Wall -O2 -fcommon

   ##################################################
   # You shouldn't need to modify anything below here
#+end_src

* Part A

This part requires you to implement three functions using Y86-64
ISA. You can put your implementation in directory =y86-code=. Then, you
can compile =src.ys= by typing =make src.yo= in the =y86-code= directory. To
simulate your program, type =../misc/yis src.yo= in =y86-code= directory.

* Part B

| Stage      | iaddq V, rB                   |
| Fetch      | icode : ifun <- M_1[PC]        |
|            | rA : rB <- M_1[PC+1]           |
|            | valC <- M_8[PC+2]              |
|            | valP <- PC+10                 |
| Decode     | valA <- valC, valB <- R[rB]   |
| Execute    | valE <- valB add valA; set CC |
| Memory     |                               |
| Write back | R[rB] <- valE                 |
| PC update  | PC <- valP                    |

* Part C

The following command should be executed in the =pipe= directory.

Test =ncopy.ys=:

#+begin_src shell
  # Check length
  make ncopy.yo
  ./check-len.pl < nocpy.yo
  # Correctness
  make VERSION=full
  ./psim -t sdriver.yo
  ./psim -t ldriver.yo
  ../misc/yis sdriver.yo
  ./correctness.pl
#+end_src

Test simulator:

#+begin_src shell
  (cd ../y86-code; make testpsim)
  # if no iaadq implementation, remove TFLAGS
  (cd ../ptest; make SIM=../ppe/psim TFLAGS=-i)
  ./corretness.pl -p
#+end_src

Benchmark:

#+begin_src shell
  ./benchmark.pl
#+end_src

** Record

Initial average: 15.18

First attempt: only modified the source code, using =cmov= to compute
=count=, removed some redundant instructions. Average: 13.41.
