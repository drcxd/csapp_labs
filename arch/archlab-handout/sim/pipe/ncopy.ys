#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
        # Loop header
        xorq %rax,%rax          # count = 0;
        irmovq $1, %r8
        # andq %rdx, %rdx
        rrmovq %rdx, %r9
        iaddq $-7, %r9
        jmp Test

Loop:
        mrmovq (%rdi), %r10     # read val from src...
        iaddq $8, %rdi
        rmmovq %r10, (%rsi)     # ...and store it to dst
        iaddq $8, %rsi
        xorq %rcx, %rcx
        andq %r10, %r10         # val <= 0?
        cmovg %r8, %rcx
        addq %rcx, %rax         # count++

        mrmovq (%rdi), %r10     # read val from src...
        iaddq $8, %rdi
        rmmovq %r10, (%rsi)     # ...and store it to dst
        iaddq $8, %rsi
        xorq %rcx, %rcx
        andq %r10, %r10         # val <= 0?
        cmovg %r8, %rcx
        addq %rcx, %rax         # count++

        mrmovq (%rdi), %r10     # read val from src...
        iaddq $8, %rdi
        rmmovq %r10, (%rsi)     # ...and store it to dst
        iaddq $8, %rsi
        xorq %rcx, %rcx
        andq %r10, %r10         # val <= 0?
        cmovg %r8, %rcx
        addq %rcx, %rax         # count++

        mrmovq (%rdi), %r10     # read val from src...
        iaddq $8, %rdi
        rmmovq %r10, (%rsi)     # ...and store it to dst
        iaddq $8, %rsi
        xorq %rcx, %rcx
        andq %r10, %r10         # val <= 0?
        cmovg %r8, %rcx
        addq %rcx, %rax         # count++

        mrmovq (%rdi), %r10     # read val from src...
        iaddq $8, %rdi
        rmmovq %r10, (%rsi)     # ...and store it to dst
        iaddq $8, %rsi
        xorq %rcx, %rcx
        andq %r10, %r10         # val <= 0?
        cmovg %r8, %rcx
        addq %rcx, %rax         # count++

        mrmovq (%rdi), %r10     # read val from src...
        iaddq $8, %rdi
        rmmovq %r10, (%rsi)     # ...and store it to dst
        iaddq $8, %rsi
        xorq %rcx, %rcx
        andq %r10, %r10         # val <= 0?
        cmovg %r8, %rcx
        addq %rcx, %rax         # count++

        mrmovq (%rdi), %r10     # read val from src...
        iaddq $8, %rdi
        rmmovq %r10, (%rsi)     # ...and store it to dst
        iaddq $8, %rsi
        xorq %rcx, %rcx
        andq %r10, %r10         # val <= 0?
        cmovg %r8, %rcx
        addq %rcx, %rax         # count++

        mrmovq (%rdi), %r10     # read val from src...
        iaddq $8, %rdi
        rmmovq %r10, (%rsi)     # ...and store it to dst
        iaddq $8, %rsi
        xorq %rcx, %rcx
        andq %r10, %r10         # val <= 0?
        cmovg %r8, %rcx
        addq %rcx, %rax         # count++

        iaddq $-8, %rdx
        rrmovq %rdx, %r9
        iaddq $-7, %r9

        # iaddq $-1, %rdx

Test:
        # andq %rdx,%rdx          # len > 0?
        jg Loop                 # if so, goto Loop:

        andq %rdx, %rdx
        jmp STest
SLoop:
        mrmovq (%rdi), %r10     # read val from src...
        iaddq $8, %rdi
        rmmovq %r10, (%rsi)     # ...and store it to dst
        iaddq $8, %rsi
        xorq %rcx, %rcx
        andq %r10, %r10         # val <= 0?
        cmovg %r8, %rcx
        addq %rcx, %rax         # count++
        iaddq $-1, %rdx
STest:
        jg SLoop

##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
        ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
